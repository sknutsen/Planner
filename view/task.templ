package view

import "fmt"
import "github.com/sknutsen/planner/models"
import "github.com/sknutsen/planner/routes"
import "github.com/sknutsen/planner/database"
import "github.com/sknutsen/planner/lib"

templ Task(state models.ClientState, task models.Task) {
    @Modal("") {
        <form id="selected-task" class="task">
            <input type="number" class="hidden" name="id" value={fmt.Sprint(task.Id)} />
            <input type="number" class="hidden" name="plan_id" value={fmt.Sprint(state.SelectedPlanId)} />
            <input type="text" name="title" placeholder="Title" value={task.Title} />
            <input type="date" name="date" value={task.Date} />
            <input type="text" name="subtitle" placeholder="Subtitle" value={task.Subtitle} />
            <textarea id="selected-task__description" name="description">
                {task.Description}
            </textarea>

            <div class="button-group">
                <button type="submit" hx-target="#modal" hx-swap="outerHTML" hx-post={routes.TaskUpdate} hx-include="closest form" hx-ext="json-enc">Save</button>
                if task.Id != 0 {
                    <button type="button" hx-target="#modal" hx-swap="outerHTML" hx-delete={fmt.Sprintf("/task/%d", task.Id)}>Delete</button>
                }
                <button type="button" hx-target="#modal" hx-swap="outerHTML" hx-get={routes.ComponentsModal}>Cancel</button>
            </div>
        </form>
        <script>
            simplemde = new SimpleMDE({ 
                element: document.getElementById("selected-task__description"),
                forceSync: true,
            });
        </script>
    }
}

templ TaskPreview(task database.Task, hideDescription bool) {
    <div id={fmt.Sprintf("task-%d", task.ID)} class="task-preview">
        <div class="task-preview__header">
            <div class="task-preview__identifier" hx-target="#modal" hx-swap="outerHTML" hx-get={fmt.Sprintf("/task/%d", task.ID)}>
                <h3 class="task-preview__title">{task.Title}</h3>
                <h4 class="task-preview__subtitle">{fmt.Sprint(task.Subtitle)}</h4>
            </div>
            <button class={ templ.KV("hidden", lib.IsNullOrEmpty(task.Description)) } type="button" onclick={toggleDescription(task.ID)}>
                <span id={fmt.Sprintf("task-%d__expand-icon", task.ID)} class="material-symbols-outlined">
                    expand_more
                </span>
            </button>
        </div>
        <p id={fmt.Sprintf("task-%d__description", task.ID)} class={ "task-preview__description", templ.KV("hidden", hideDescription) }>
            {fmt.Sprint(task.Description)}
        </p>
    </div>
}

script toggleDescription(id int64) {
    const desc = document.getElementById("task-" + id + "__description");
    const icon = document.getElementById("task-" + id + "__expand-icon");
    const isHidden = desc.classList.contains("hidden");

    if (isHidden) {
        mod.show(desc.id);
        icon.innerHTML = "expand_less"
    } else {
        mod.hide(desc.id);
        icon.innerHTML = "expand_more"
    }
}
